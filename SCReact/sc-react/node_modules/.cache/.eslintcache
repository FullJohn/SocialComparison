[{"/home/bitnami/SocialComparison/SCReact/sc-react/src/index.js":"1","/home/bitnami/SocialComparison/SCReact/sc-react/src/App.js":"2","/home/bitnami/SocialComparison/SCReact/sc-react/src/reportWebVitals.js":"3","/home/bitnami/SocialComparison/SCReact/sc-react/src/Home.js":"4","/home/bitnami/SocialComparison/SCReact/sc-react/src/Post.js":"5","/home/bitnami/SocialComparison/SCReact/sc-react/src/Navigation.js":"6","/home/bitnami/SocialComparison/SCReact/sc-react/src/LoadingScreen.js":"7"},{"size":500,"mtime":1638918085323,"results":"8","hashOfConfig":"9"},{"size":714,"mtime":1638918085323,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1638918085323,"results":"11","hashOfConfig":"9"},{"size":4568,"mtime":1639015286773,"results":"12","hashOfConfig":"9"},{"size":2431,"mtime":1639015286773,"results":"13","hashOfConfig":"9"},{"size":781,"mtime":1638918085323,"results":"14","hashOfConfig":"9"},{"size":1692,"mtime":1639015286773,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"cy2m5t",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"/home/bitnami/SocialComparison/SCReact/sc-react/src/index.js",[],["34","35"],"/home/bitnami/SocialComparison/SCReact/sc-react/src/App.js",["36"],"import logo from './logo.svg';\nimport './App.css';\n\nimport {Home} from './Home';\nimport {Post} from './Post';\nimport {Navigation} from './Navigation';\n\nimport {BrowserRouter, Route, Routes} from 'react-router-dom';\nimport { LoadScreen } from './LoadingScreen';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n    <div className=\"container\">\n      <h3 className = \"m-3 d-flex justify-content-center\">\n        Brand Comparison\n      </h3>\n\n      <Navigation/>\n\n      <Routes>\n          <Route path='/home' element={<Home/>} />\n          <Route path='/post' element={<Post/>} />\n          <Route path='/loading' element={<LoadScreen/>} />\n\n      </Routes>\n    </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","/home/bitnami/SocialComparison/SCReact/sc-react/src/reportWebVitals.js",[],"/home/bitnami/SocialComparison/SCReact/sc-react/src/Home.js",["37","38","39","40","41","42","43","44"],"import Button from '@restart/ui/esm/Button';\nimport React, {Component, useEffect, useState} from 'react';\nimport { Tab } from 'react-bootstrap';\nimport DatePicker from 'react-date-picker';\nimport { Navigate } from 'react-router';\n\n\n\n\n\n\n\n\nexport class Home extends Component{\n\n    constructor(props) {\n        super(props);\n\n        this.state = {queryId: '', platform: 'YouTube', brand1: '', brand2: '', brand3: '', startDate: new Date(), endDate: new Date(), redirect: false, queryId: ''};\n  \n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.startDateChange = this.startDateChange.bind(this);\n        this.endDateChange = this.endDateChange.bind(this);\n    \n      }\n      \n      startDateChange(date) {this.setState({startDate:date}); }\n      endDateChange(date) {this.setState({endDate: date}); }\n      handleChange(event) {this.setState({[event.target.name]: event.target.value}); }\n      handleSubmit(event) {\n        const { platform, brand1, brand2, brand3, startDate, endDate} = this.state;\n    \n\n        \n        event.preventDefault();\n        fetch('http://54.144.107.206:8000/query/', {\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json',\n            },\n            body:JSON.stringify({\n                platform:platform,\n                brand1:brand1,\n                brand2:brand2,\n                brand3:brand3,\n                startDate:startDate,\n                endDate:endDate\n            })\n        })\n        .then(response=>response.json())\n\n        .then((result)=>{\n            \n        \n            if(result['redirect'] == true){\n                \n                this.state.queryId = result['queryId']\n                this.setState([this.state.queryId])\n                \n                this.state.redirect = true\n                this.setState([this.state.redirect])\n            }\n            \n            else{\n                alert(result['message']);\n            }\n        \n        })\n    }\n\n\n    render(){\n        if(this.state.redirect){\n            const url = \"/loading?queryId=\" + this.state.queryId\n            return(\n            <Navigate to={url}></Navigate>)\n        }\n        return(\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label htmlFor='platform'>Select a platform:</label>\n                        <select name='platform' placeholder = 'YouTube' value={this.state.platform} onChange={this.handleChange}>\n                            <option value=\"youtube\">YouTube</option>\n                            <option value=\"facebook\">Facebook</option>\n                            <option value=\"instagram\">Instagram</option>\n                            <option value=\"twitter\">Twitter</option>\n                            <option value=\"pinterest\">Pinterest</option>\n                            <option value=\"tiktok\">TikTok</option>\n                        </select>\n                    <br></br>\n                    <label htmlFor=\"startDate\">Start Date:</label>\n                        <DatePicker type=\"date\" name=\"startDate\" value={this.state.startDate}\n                        onChange={this.startDateChange} required={true} dayPlaceholder=\"dd\" monthPlaceholder=\"mm\" yearPlaceholder=\"yyyy\"\n                        clearIcon={null}></DatePicker>\n                    <t></t>\n                    <label htmlFor=\"endDate\">End Date:</label>\n                        <DatePicker type=\"date\" name=\"endDate\" value={this.state.endDate}\n                        onChange={this.endDateChange} required={true} dayPlaceholder=\"dd\" monthPlaceholder=\"mm\" yearPlaceholder=\"yyyy\"\n                        clearIcon={null}></DatePicker>\n                    \n                    <br></br>\n                    \n                    <label htmlFor='brand1'>Brand 1:</label>\n                        <input type=\"text\" name=\"brand1\" value={this.state.brand1} onChange={this.handleChange}/>\n                    <label htmlFor='brand2'>Brand 2:</label>\n                        <input type=\"text\" name=\"brand2\" value={this.state.brand2} onChange={this.handleChange}/>\n                    <label htmlFor='brand3'>Brand 3:</label>\n                        <input type=\"text\" name=\"brand3\" value={this.state.brand3} onChange={this.handleChange}/>\n                    <br></br>\n\n                    <input type='submit' value='Submit'></input>\n                    </form>\n                    \n                </div>\n            );\n    }\n}\n","/home/bitnami/SocialComparison/SCReact/sc-react/src/Post.js",[],"/home/bitnami/SocialComparison/SCReact/sc-react/src/Navigation.js",[],"/home/bitnami/SocialComparison/SCReact/sc-react/src/LoadingScreen.js",["45","46","47"],"import React, {Component, useState} from 'react';\nimport { Navigate } from 'react-router';\n\n\nexport class LoadScreen extends Component{\n\n    constructor(props) {\n        super(props);\n        \n        let search= window.location.search.substring(9)\n        this.state = {queryId: search, redirect: false};\n        \n        this.handleLoad = this.handleLoad.bind(this);\n        this.runQuery = this.runQuery.bind(this);\n    }\n\n    componentDidMount() {\n        window.addEventListener('load', this.handleLoad);\n        this.runQuery()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('load', this.handleLoad);\n    }\n    \n    \n    runQuery(){\n        const {queryId} = this.state\n        fetch('http://54.144.107.206:8000/run/', {\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({\n                queryId:queryId\n            })\n        })\n        .then(response=>response.json())\n        .then((result)=>{\n\n            if(result['redirect'] == true){\n\n                this.state.redirect = true\n                this.setState([this.state.redirect])\n            }\n        })\n        }\n\n    handleLoad(){\n        \n    }\n    render(){\n        if(this.state.redirect){\n            const url = \"/post?queryId=\" + this.state.queryId\n            return(\n                <Navigate to={url}></Navigate>\n            )\n        }\n        return(\n            <div>\n                <label>Loading your results. Page will redirect upon completion.</label>\n                {this.runQuery}\n            </div>\n            \n        )\n        }\n    }",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":12},{"ruleId":"52","severity":1,"message":"56","line":1,"column":8,"nodeType":"54","messageId":"55","endLine":1,"endColumn":14},{"ruleId":"52","severity":1,"message":"57","line":2,"column":27,"nodeType":"54","messageId":"55","endLine":2,"endColumn":36},{"ruleId":"52","severity":1,"message":"58","line":2,"column":38,"nodeType":"54","messageId":"55","endLine":2,"endColumn":46},{"ruleId":"52","severity":1,"message":"59","line":3,"column":10,"nodeType":"54","messageId":"55","endLine":3,"endColumn":13},{"ruleId":"60","severity":1,"message":"61","line":19,"column":154,"nodeType":"62","messageId":"63","endLine":19,"endColumn":161},{"ruleId":"64","severity":1,"message":"65","line":57,"column":35,"nodeType":"66","messageId":"63","endLine":57,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":59,"column":17,"nodeType":"69","messageId":"70","endLine":59,"endColumn":27},{"ruleId":"67","severity":1,"message":"68","line":62,"column":17,"nodeType":"69","messageId":"70","endLine":62,"endColumn":27},{"ruleId":"52","severity":1,"message":"58","line":1,"column":27,"nodeType":"54","messageId":"55","endLine":1,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":42,"column":35,"nodeType":"66","messageId":"63","endLine":42,"endColumn":37},{"ruleId":"67","severity":1,"message":"68","line":44,"column":17,"nodeType":"69","messageId":"70","endLine":44,"endColumn":27},"no-native-reassign",["71"],"no-negated-in-lhs",["72"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Tab' is defined but never used.","no-dupe-keys","Duplicate key 'queryId'.","ObjectExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","no-global-assign","no-unsafe-negation"]