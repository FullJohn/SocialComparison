{"ast":null,"code":"var _jsxFileName = \"/home/bitnami/SocialComparison/SCReact/sc-react/src/LoadingScreen.js\";\nimport React, { Component, useState } from 'react';\nimport { Navigate } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class LoadScreen extends Component {\n  constructor(props) {\n    super(props);\n    let search = window.location.search.substring(9);\n    this.state = {\n      queryId: search,\n      redirect: false\n    };\n    this.handleLoad = this.handleLoad.bind(this);\n    this.runQuery = this.runQuery.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.handleLoad);\n    this.runQuery();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', this.handleLoad);\n  }\n\n  runQuery() {\n    const {\n      queryId\n    } = this.state;\n    fetch('http://54.144.107.206:8000/run/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        queryId: queryId\n      })\n    }).then(response => response.json()).then(result => {\n      if (result['redirect'] == true) {\n        this.state.redirect = true;\n        this.setState([this.state.redirect]);\n      }\n    });\n  }\n\n  handleLoad() {}\n\n  render() {\n    if (this.state.redirect) {\n      const url = \"/post?queryId=\" + this.state.queryId;\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Loading your results. Page will redirect upon completion.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.runQuery]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/bitnami/SocialComparison/SCReact/sc-react/src/LoadingScreen.js"],"names":["React","Component","useState","Navigate","LoadScreen","constructor","props","search","window","location","substring","state","queryId","redirect","handleLoad","bind","runQuery","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","fetch","method","headers","body","JSON","stringify","then","response","json","result","setState","render","url"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAGA,OAAO,MAAMC,UAAN,SAAyBH,SAAzB,CAAkC;AAErCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,QAAIC,MAAM,GAAEC,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAuBG,SAAvB,CAAiC,CAAjC,CAAZ;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAEL,MAAV;AAAkBM,MAAAA,QAAQ,EAAE;AAA5B,KAAb;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAChBT,IAAAA,MAAM,CAACU,gBAAP,CAAwB,MAAxB,EAAgC,KAAKJ,UAArC;AACA,SAAKE,QAAL;AACH;;AAEDG,EAAAA,oBAAoB,GAAG;AACnBX,IAAAA,MAAM,CAACY,mBAAP,CAA2B,MAA3B,EAAmC,KAAKN,UAAxC;AACH;;AAGDE,EAAAA,QAAQ,GAAE;AACN,UAAM;AAACJ,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACAU,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACrCC,MAAAA,MAAM,EAAC,MAD8B;AAErCC,MAAAA,OAAO,EAAC;AACJ,kBAAS,kBADL;AAEJ,wBAAe;AAFX,OAF6B;AAMrCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBd,QAAAA,OAAO,EAACA;AADQ,OAAf;AANgC,KAApC,CAAL,CAUCe,IAVD,CAUMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAVhB,EAWCF,IAXD,CAWOG,MAAD,IAAU;AAEZ,UAAGA,MAAM,CAAC,UAAD,CAAN,IAAsB,IAAzB,EAA8B;AAE1B,aAAKnB,KAAL,CAAWE,QAAX,GAAsB,IAAtB;AACA,aAAKkB,QAAL,CAAc,CAAC,KAAKpB,KAAL,CAAWE,QAAZ,CAAd;AACH;AACJ,KAlBD;AAmBC;;AAELC,EAAAA,UAAU,GAAE,CAEX;;AACDkB,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKrB,KAAL,CAAWE,QAAd,EAAuB;AACnB,YAAMoB,GAAG,GAAG,mBAAmB,KAAKtB,KAAL,CAAWC,OAA1C;AACA,0BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAEqB;AAAd;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AACD,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKjB,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOC;;AA9DgC","sourcesContent":["import React, {Component, useState} from 'react';\r\nimport { Navigate } from 'react-router';\r\n\r\n\r\nexport class LoadScreen extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        let search= window.location.search.substring(9)\r\n        this.state = {queryId: search, redirect: false};\r\n        \r\n        this.handleLoad = this.handleLoad.bind(this);\r\n        this.runQuery = this.runQuery.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('load', this.handleLoad);\r\n        this.runQuery()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('load', this.handleLoad);\r\n    }\r\n    \r\n    \r\n    runQuery(){\r\n        const {queryId} = this.state\r\n        fetch('http://54.144.107.206:8000/run/', {\r\n            method:'POST',\r\n            headers:{\r\n                'Accept':'application/json',\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                queryId:queryId\r\n            })\r\n        })\r\n        .then(response=>response.json())\r\n        .then((result)=>{\r\n\r\n            if(result['redirect'] == true){\r\n\r\n                this.state.redirect = true\r\n                this.setState([this.state.redirect])\r\n            }\r\n        })\r\n        }\r\n\r\n    handleLoad(){\r\n        \r\n    }\r\n    render(){\r\n        if(this.state.redirect){\r\n            const url = \"/post?queryId=\" + this.state.queryId\r\n            return(\r\n                <Navigate to={url}></Navigate>\r\n            )\r\n        }\r\n        return(\r\n            <div>\r\n                <label>Loading your results. Page will redirect upon completion.</label>\r\n                {this.runQuery}\r\n            </div>\r\n            \r\n        )\r\n        }\r\n    }"]},"metadata":{},"sourceType":"module"}