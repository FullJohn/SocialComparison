{"ast":null,"code":"var _jsxFileName = \"/home/bitnami/SocialComparison/SCReact/sc-react/src/LoadingScreen.js\";\nimport React, { Component, useState } from 'react';\nimport { Navigate, useLocation } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class LoadScreen extends Component {\n  constructor(props) {\n    super(props);\n    let search = window.location.search.substring(9);\n    this.state = {\n      queryId: search,\n      redirect: false\n    };\n    this.handleLoad = this.handleLoad.bind(this);\n    this.runQuery = this.runQuery.bind(this);\n  }\n\n  componentDidMount() {\n    window.addEventListener('load', this.handleLoad);\n    this.runQuery();\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('load', this.handleLoad);\n  }\n\n  runQuery() {\n    const {\n      queryId\n    } = this.state;\n    fetch('http://172.26.2.96:3306/run/', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        queryId: queryId\n      })\n    }).then(response => response.json()).then(result => {\n      if (result['redirect'] == true) {\n        this.state.redirect = true;\n        this.setState([this.state.redirect]);\n      }\n    });\n  }\n\n  handleLoad() {}\n\n  render() {\n    if (this.state.redirect) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/post/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Loading your results. Page will redirect upon completion.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.runQuery]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/bitnami/SocialComparison/SCReact/sc-react/src/LoadingScreen.js"],"names":["React","Component","useState","Navigate","useLocation","LoadScreen","constructor","props","search","window","location","substring","state","queryId","redirect","handleLoad","bind","runQuery","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","fetch","method","headers","body","JSON","stringify","then","response","json","result","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,cAAtC;;AAGA,OAAO,MAAMC,UAAN,SAAyBJ,SAAzB,CAAkC;AAErCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,QAAIC,MAAM,GAAEC,MAAM,CAACC,QAAP,CAAgBF,MAAhB,CAAuBG,SAAvB,CAAiC,CAAjC,CAAZ;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,OAAO,EAAEL,MAAV;AAAkBM,MAAAA,QAAQ,EAAE;AAA5B,KAAb;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH;;AAEDE,EAAAA,iBAAiB,GAAG;AAEhBT,IAAAA,MAAM,CAACU,gBAAP,CAAwB,MAAxB,EAAgC,KAAKJ,UAArC;AACA,SAAKE,QAAL;AACH;;AAEDG,EAAAA,oBAAoB,GAAG;AACnBX,IAAAA,MAAM,CAACY,mBAAP,CAA2B,MAA3B,EAAmC,KAAKN,UAAxC;AACH;;AAGDE,EAAAA,QAAQ,GAAE;AACN,UAAM;AAACJ,MAAAA;AAAD,QAAY,KAAKD,KAAvB;AACAU,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AAClCC,MAAAA,MAAM,EAAC,MAD2B;AAElCC,MAAAA,OAAO,EAAC;AACJ,kBAAS,kBADL;AAEJ,wBAAe;AAFX,OAF0B;AAMlCC,MAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBd,QAAAA,OAAO,EAACA;AADQ,OAAf;AAN6B,KAAjC,CAAL,CAUCe,IAVD,CAUMC,QAAQ,IAAEA,QAAQ,CAACC,IAAT,EAVhB,EAWCF,IAXD,CAWOG,MAAD,IAAU;AAEZ,UAAGA,MAAM,CAAC,UAAD,CAAN,IAAsB,IAAzB,EAA8B;AAE1B,aAAKnB,KAAL,CAAWE,QAAX,GAAsB,IAAtB;AACA,aAAKkB,QAAL,CAAc,CAAC,KAAKpB,KAAL,CAAWE,QAAZ,CAAd;AACH;AACJ,KAlBD;AAmBC;;AAELC,EAAAA,UAAU,GAAE,CAEX;;AACDkB,EAAAA,MAAM,GAAE;AACJ,QAAG,KAAKrB,KAAL,CAAWE,QAAd,EAAuB;AACnB,0BACI,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH;;AACD,wBACI;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEK,KAAKG,QAFV;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAOC;;AA9DgC","sourcesContent":["import React, {Component, useState} from 'react';\nimport { Navigate, useLocation } from 'react-router';\n\n\nexport class LoadScreen extends Component{\n\n    constructor(props) {\n        super(props);\n        \n        let search= window.location.search.substring(9)\n        this.state = {queryId: search, redirect: false};\n        \n        this.handleLoad = this.handleLoad.bind(this);\n        this.runQuery = this.runQuery.bind(this);\n    }\n\n    componentDidMount() {\n    \n        window.addEventListener('load', this.handleLoad);\n        this.runQuery()\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('load', this.handleLoad);\n    }\n    \n    \n    runQuery(){\n        const {queryId} = this.state\n        fetch('http://172.26.2.96:3306/run/', {\n            method:'POST',\n            headers:{\n                'Accept':'application/json',\n                'Content-Type':'application/json'\n            },\n            body:JSON.stringify({\n                queryId:queryId\n            })\n        })\n        .then(response=>response.json())\n        .then((result)=>{\n\n            if(result['redirect'] == true){\n\n                this.state.redirect = true\n                this.setState([this.state.redirect])\n            }\n        })\n        }\n\n    handleLoad(){\n        \n    }\n    render(){\n        if(this.state.redirect){\n            return(\n                <Navigate to='/post/'></Navigate>\n            )\n        }\n        return(\n            <div>\n                <label>Loading your results. Page will redirect upon completion.</label>\n                {this.runQuery}\n            </div>\n            \n        )\n        }\n    }"]},"metadata":{},"sourceType":"module"}